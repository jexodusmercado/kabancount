/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInRouteImport } from './routes/sign-in/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as RouteImport } from './routes/route'
import { Route as AuthPointOfSaleRouteImport } from './routes/_auth/point-of-sale/route'
import { Route as AuthDashboardRouteImport } from './routes/_auth/dashboard/route'
import { Route as AuthProductsIndexImport } from './routes/_auth/products/index'
import { Route as AuthPointOfSaleIndexImport } from './routes/_auth/point-of-sale/index'
import { Route as AuthTransactionTransactionIdImport } from './routes/_auth/transaction/$transactionId'
import { Route as AuthProductsCreateImport } from './routes/_auth/products/create'
import { Route as AuthProductsProductIdImport } from './routes/_auth/products/$productId'

// Create/Update Routes

const SignInRouteRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const RouteRoute = RouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthPointOfSaleRouteRoute = AuthPointOfSaleRouteImport.update({
  id: '/point-of-sale',
  path: '/point-of-sale',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthDashboardRouteRoute = AuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthProductsIndexRoute = AuthProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthPointOfSaleIndexRoute = AuthPointOfSaleIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthPointOfSaleRouteRoute,
} as any)

const AuthTransactionTransactionIdRoute =
  AuthTransactionTransactionIdImport.update({
    id: '/transaction/$transactionId',
    path: '/transaction/$transactionId',
    getParentRoute: () => AuthRouteRoute,
  } as any)

const AuthProductsCreateRoute = AuthProductsCreateImport.update({
  id: '/products/create',
  path: '/products/create',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthProductsProductIdRoute = AuthProductsProductIdImport.update({
  id: '/products/$productId',
  path: '/products/$productId',
  getParentRoute: () => AuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/point-of-sale': {
      id: '/_auth/point-of-sale'
      path: '/point-of-sale'
      fullPath: '/point-of-sale'
      preLoaderRoute: typeof AuthPointOfSaleRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/products/$productId': {
      id: '/_auth/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof AuthProductsProductIdImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/products/create': {
      id: '/_auth/products/create'
      path: '/products/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof AuthProductsCreateImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/transaction/$transactionId': {
      id: '/_auth/transaction/$transactionId'
      path: '/transaction/$transactionId'
      fullPath: '/transaction/$transactionId'
      preLoaderRoute: typeof AuthTransactionTransactionIdImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/point-of-sale/': {
      id: '/_auth/point-of-sale/'
      path: '/'
      fullPath: '/point-of-sale/'
      preLoaderRoute: typeof AuthPointOfSaleIndexImport
      parentRoute: typeof AuthPointOfSaleRouteImport
    }
    '/_auth/products/': {
      id: '/_auth/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthProductsIndexImport
      parentRoute: typeof AuthRouteImport
    }
  }
}

// Create and export the route tree

interface AuthPointOfSaleRouteRouteChildren {
  AuthPointOfSaleIndexRoute: typeof AuthPointOfSaleIndexRoute
}

const AuthPointOfSaleRouteRouteChildren: AuthPointOfSaleRouteRouteChildren = {
  AuthPointOfSaleIndexRoute: AuthPointOfSaleIndexRoute,
}

const AuthPointOfSaleRouteRouteWithChildren =
  AuthPointOfSaleRouteRoute._addFileChildren(AuthPointOfSaleRouteRouteChildren)

interface AuthRouteRouteChildren {
  AuthDashboardRouteRoute: typeof AuthDashboardRouteRoute
  AuthPointOfSaleRouteRoute: typeof AuthPointOfSaleRouteRouteWithChildren
  AuthProductsProductIdRoute: typeof AuthProductsProductIdRoute
  AuthProductsCreateRoute: typeof AuthProductsCreateRoute
  AuthTransactionTransactionIdRoute: typeof AuthTransactionTransactionIdRoute
  AuthProductsIndexRoute: typeof AuthProductsIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthDashboardRouteRoute: AuthDashboardRouteRoute,
  AuthPointOfSaleRouteRoute: AuthPointOfSaleRouteRouteWithChildren,
  AuthProductsProductIdRoute: AuthProductsProductIdRoute,
  AuthProductsCreateRoute: AuthProductsCreateRoute,
  AuthTransactionTransactionIdRoute: AuthTransactionTransactionIdRoute,
  AuthProductsIndexRoute: AuthProductsIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof RouteRoute
  '': typeof AuthRouteRouteWithChildren
  '/sign-in': typeof SignInRouteRoute
  '/dashboard': typeof AuthDashboardRouteRoute
  '/point-of-sale': typeof AuthPointOfSaleRouteRouteWithChildren
  '/products/$productId': typeof AuthProductsProductIdRoute
  '/products/create': typeof AuthProductsCreateRoute
  '/transaction/$transactionId': typeof AuthTransactionTransactionIdRoute
  '/point-of-sale/': typeof AuthPointOfSaleIndexRoute
  '/products': typeof AuthProductsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof RouteRoute
  '': typeof AuthRouteRouteWithChildren
  '/sign-in': typeof SignInRouteRoute
  '/dashboard': typeof AuthDashboardRouteRoute
  '/products/$productId': typeof AuthProductsProductIdRoute
  '/products/create': typeof AuthProductsCreateRoute
  '/transaction/$transactionId': typeof AuthTransactionTransactionIdRoute
  '/point-of-sale': typeof AuthPointOfSaleIndexRoute
  '/products': typeof AuthProductsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof RouteRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/sign-in': typeof SignInRouteRoute
  '/_auth/dashboard': typeof AuthDashboardRouteRoute
  '/_auth/point-of-sale': typeof AuthPointOfSaleRouteRouteWithChildren
  '/_auth/products/$productId': typeof AuthProductsProductIdRoute
  '/_auth/products/create': typeof AuthProductsCreateRoute
  '/_auth/transaction/$transactionId': typeof AuthTransactionTransactionIdRoute
  '/_auth/point-of-sale/': typeof AuthPointOfSaleIndexRoute
  '/_auth/products/': typeof AuthProductsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/sign-in'
    | '/dashboard'
    | '/point-of-sale'
    | '/products/$productId'
    | '/products/create'
    | '/transaction/$transactionId'
    | '/point-of-sale/'
    | '/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/sign-in'
    | '/dashboard'
    | '/products/$productId'
    | '/products/create'
    | '/transaction/$transactionId'
    | '/point-of-sale'
    | '/products'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/sign-in'
    | '/_auth/dashboard'
    | '/_auth/point-of-sale'
    | '/_auth/products/$productId'
    | '/_auth/products/create'
    | '/_auth/transaction/$transactionId'
    | '/_auth/point-of-sale/'
    | '/_auth/products/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  RouteRoute: typeof RouteRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  SignInRouteRoute: typeof SignInRouteRoute
}

const rootRouteChildren: RootRouteChildren = {
  RouteRoute: RouteRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  SignInRouteRoute: SignInRouteRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/sign-in"
      ]
    },
    "/": {
      "filePath": "route.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/dashboard",
        "/_auth/point-of-sale",
        "/_auth/products/$productId",
        "/_auth/products/create",
        "/_auth/transaction/$transactionId",
        "/_auth/products/"
      ]
    },
    "/sign-in": {
      "filePath": "sign-in/route.tsx"
    },
    "/_auth/dashboard": {
      "filePath": "_auth/dashboard/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/point-of-sale": {
      "filePath": "_auth/point-of-sale/route.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/point-of-sale/"
      ]
    },
    "/_auth/products/$productId": {
      "filePath": "_auth/products/$productId.tsx",
      "parent": "/_auth"
    },
    "/_auth/products/create": {
      "filePath": "_auth/products/create.tsx",
      "parent": "/_auth"
    },
    "/_auth/transaction/$transactionId": {
      "filePath": "_auth/transaction/$transactionId.tsx",
      "parent": "/_auth"
    },
    "/_auth/point-of-sale/": {
      "filePath": "_auth/point-of-sale/index.tsx",
      "parent": "/_auth/point-of-sale"
    },
    "/_auth/products/": {
      "filePath": "_auth/products/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
